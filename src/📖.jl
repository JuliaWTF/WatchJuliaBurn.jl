## Contains mapping from functions to func_to_emojis
## Each function (treated as a Symbol) maps to a Tuple of Symbols and Tuple{Symbol,Float64} for
## emojis needing a specific version
const func_to_emojis = 📖(
    ## Base
    :ENV => (:(🧧),),
    :ArgumentError => (:(💬🚨),),
    :Dict => (:(📖),),
    :Threads => (:(🧵),),
    :broadcast => (:(📡),),
    :cd => (:(💿),),
    :chop => (:(🥢), (Symbol(Char(0x0001f333) * Char(0x0001fa93)), 1.2),), # 🌳🪓
    :delete! => (:(🔥),),
    :download => (:(📥),),
    :error => (:(💣),),
    :exit => (:(🚪),),
    :false => (:👎,),
    :findall => (:(🕵️),),
    :findfirst => (:(🔎🥇),),
    :findnext => ((:🔎⏭),),
    :first => (:(🥇),),
    :flush => (:(😳),),
    :foldr => (:(🗂), :(📁),),
    :get => (:(🤲),),
    :join => (:(🚪🚶),),
    :keys => (:(🔑), :(🗝),),
    :kill => (:(⚰️),),
    :map => (:(🗺),),
    :nothing => (:(⬛),),
    :peek => ((:(⛰️), 1.5),),
    :pop! => (:(🍾), :(🏹🎈)),
    :print => (:(🖨️),),
    :rand => (:(🎰),:(🎲),),
    :run => (:(🏃),),
    :show => (:(☝️),),
    :sleep => (:(😴), :(💤),),
    :string => (:(🎻),),
    :throw => (:(c╯°□°ↄ╯), :(🤮), :(🚮),),
    :time => (:(🕛), :(⏱️), :(⌛), :(⏲️),),
    :true => (:(✅), :(👍), :(👌),),
    :write => (:(🖊️), :(✍️), :(🖋️),),
    :zip => (:(🤐),),
    ## Arrays
    :Matrix => (:(🔢),),
    :axes => ((Symbol(Char(0x1fa93)^2), 1.2),), # 🪓🪓
    :cat => (:(😻), :(😹), :(🐈),),
    :vcat => (:(⬇️😻), :(⬇️😹), :(⬇️🐈),),
    :hcat => (:(➡️😻), :(➡️😹), :(➡️🐈),),
    :collect => (:(🧺),),
    :fill => (:(🚰),),
    ## Math
    :abs => ((:👔💪),(:🎽💪),),
    :clamp => (:(🗜️),),
    :cot => (:(🧥), :(🥼)),
    :count => (:(🧮),),
    :count_ones => (:(🧮1️⃣1️⃣),),
    :count_zeros => (:(🧮0️⃣0️⃣),),
    :div => (:(Symbol(Char(0x1f93f)), 1.2),), # 🤿
    :float => ((:⛵️),),
    :imag => (:(🔮),),
    :inv => (:(↔),),
    :isreal => ((:🛸❓),),
    :log => ((Symbol(Char(0x1fab5)), 1.5),), # 🪵
    :(mean ∘ skipmissing) => (:(😠),),
    :mod => (:(🛵🔧),),
    :pi => (:(🥧), :(🍰),),
    :round => (:(🎠), :(🔵),),
    :sign => ((Symbol(Char(0x1faa7)), 1.5),(Symbol(Char(0x1f68f)), 1.5),), # 🪧, 🚏
    :tan => (:(🧑🏻➡️🧑🏽), :(👩🏻➡️👩🏽),),
    :view => (:(👀), (:👁️),),
    :push! => (:(🏋️‍♀️), :(🏋️), :(🏋️‍♂️)),
)
